{"ast":null,"code":"import _objectSpread from\"/System/Volumes/Data/Bharath/React/Chat App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/System/Volumes/Data/Bharath/React/Chat App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import{createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var initialTheme={backgroundColor:\"#333\",color:\"white\"};export var ThemeContext=/*#__PURE__*/createContext(initialTheme);export var ThemeProvider=function ThemeProvider(props){var _useReducer=useReducer(themeReducer,initialTheme),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{dispatch:dispatch}),children:props.children});};var themeReducer=function themeReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialTheme;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'CHANGE_THEME':{if(state.backgroundColor==='black')return{backgroundColor:\"white\",color:\"black\"};return initialTheme;}default:return _objectSpread({},state);}};","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/store/themeContext.js"],"names":["React","useReducer","createContext","initialTheme","backgroundColor","color","ThemeContext","ThemeProvider","props","themeReducer","state","dispatch","children","action","type"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,aAAT,KAA8B,OAA9B,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,eAAe,CAAE,MADA,CAEjBC,KAAK,CAAE,OAFU,CAArB,CAKA,MAAO,IAAMC,CAAAA,YAAY,cAAGJ,aAAa,CAACC,YAAD,CAAlC,CAGP,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,iBACRP,UAAU,CAACQ,YAAD,CAAeN,YAAf,CADF,4CAC3BO,KAD2B,iBACpBC,QADoB,iBAGlC,mBAAO,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,gCAAOD,KAAP,MAAcC,QAAQ,CAARA,QAAd,EAA5B,UACFH,KAAK,CAACI,QADJ,EAAP,CAGH,CANM,CAQP,GAAMH,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXU,CAAAA,MAAW,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,cAAL,CAAqB,CACjB,GAAIJ,KAAK,CAACN,eAAN,GAA0B,OAA9B,CACA,MAAO,CACHA,eAAe,CAAE,OADd,CAEHC,KAAK,CAAE,OAFJ,CAAP,CAIA,MAAOF,CAAAA,YAAP,CACH,CACD,QAAS,wBAAYO,KAAZ,EATb,CAWH,CAZD","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialTheme = {\n    backgroundColor: \"#333\",\n    color: \"white\"\n}\n\nexport const ThemeContext = createContext(initialTheme);\n\n\nexport const ThemeProvider = props => {\n    const [state, dispatch] = useReducer(themeReducer, initialTheme);\n\n    return <ThemeContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </ThemeContext.Provider>;\n}\n\nconst themeReducer = (state = initialTheme, action) => {\n    switch (action.type) {\n        case 'CHANGE_THEME': {\n            if (state.backgroundColor === 'black')\n            return {\n                backgroundColor: \"white\",\n                color: \"black\"\n            }\n            return initialTheme;\n        }\n        default: return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}