{"ast":null,"code":"var _jsxFileName = \"/Bharath/React/Chat App/src/components/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoom = () => {\n  _s();\n\n  const [messageText, setMessageText] = useState('');\n  var db = firebase.firestore();\n  const [sender, setSender] = useState('Bob');\n  const [messageList, setMessageList] = useState([]);\n  const userName = 'Alice';\n  useEffect(() => {\n    db.collection(\"text\").orderBy(\"time\", \"asc\").get().then(querySnapshot => {\n      const result = querySnapshot.docs.map(doc => doc.data());\n      setMessageList(result);\n    }).catch(err => console.log('Oops ', err));\n    db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n      const result = doc.docs.map(doc => doc.data());\n      setMessageList(result);\n      console.log('changed data ', doc.docs && doc.docs.map(el => el.data()));\n    });\n  }, []);\n\n  const sendMessage = () => {\n    db.collection(\"text\").add({\n      from: sender,\n      to: 'Bob',\n      message: messageText,\n      time: new Date() //'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n    }).then(docRef => {\n      console.log(\"Document written with ID: \", docRef.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to chatroom \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: !!messageList.length && messageList.map((el, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: el.from == userName ? 'profile right' : 'profile left',\n        children: [el.from == userName ? `${el.message} <- ${userName}` : `${el.from} -> ${el.message}`, \"  \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 65\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: messageText,\n      onChange: e => setMessageText(e.target.value),\n      onKeyPress: e => e.key == 'Enter' && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: sender,\n      onChange: e => setSender(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Add empty message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatRoom, \"ypZZGqdhaidIWqrDbKT4K8vKNhE=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Bharath/React/Chat App/src/components/chat/chat.js"],"names":["React","useEffect","useState","firebase","ChatRoom","messageText","setMessageText","db","firestore","sender","setSender","messageList","setMessageList","userName","collection","orderBy","get","then","querySnapshot","result","docs","map","doc","data","catch","err","console","log","onSnapshot","el","sendMessage","add","from","to","message","time","Date","docRef","id","error","length","i","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\n\nconst ChatRoom = () => {\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n    const [sender, setSender] = useState('Bob');\n    const [messageList, setMessageList] = useState([]);\n    const userName = 'Alice';\n\n    useEffect(() => {\n        db.collection(\"text\").orderBy(\"time\", \"asc\").get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => doc.data());\n            setMessageList(result);\n        }).catch(err => console.log('Oops ', err))\n\n        db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n            const result = doc.docs.map(doc => doc.data());\n            setMessageList(result);\n            console.log('changed data ', doc.docs && doc.docs.map(el => el.data()))\n        })\n    }, [])\n\n    const sendMessage = () => {\n        db.collection(\"text\").add({\n            from: sender,\n            to: 'Bob',\n            message: messageText,\n            time: new Date()//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n\n    return <div>\n        <h1>Welcome to chatroom {userName}</h1>\n        <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.from == userName ? 'profile right' : 'profile left'}>\n                {el.from == userName ? `${el.message} <- ${userName}` : `${el.from} -> ${el.message}`}  { }\n            </p>)}\n        </div>\n        <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n            onKeyPress={e => e.key == 'Enter' && sendMessage()}\n        />\n        <input type='text' value={sender} onChange={e => setSender(e.target.value)} />\n        <button onClick={sendMessage}>Add empty message</button>\n    </div>\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}