{"ast":null,"code":"var _jsxFileName = \"/Users/bharathmahendra/Bharath/React/Chat App/src/store/userContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialUserProfile = {\n  \"name\": \"\",\n  \"loggedInTime\": \"\",\n  \"userStatus\": \"\",\n  \"loginStatus\": \"\",\n  \"userID\": \"\"\n};\ninitialUserProfile = {\n  \"name\": \"bharath\",\n  \"loggedInTime\": \"2021-08-16T18:30:49.934Z\",\n  \"userStatus\": \"Online\",\n  \"loginStatus\": \"Logged in\",\n  \"userID\": \"user1\"\n};\nexport const UserProfileContext = /*#__PURE__*/createContext(initialUserProfile);\nexport const UserProfileProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(userProfileReducer, initialUserProfile);\n  return /*#__PURE__*/_jsxDEV(UserProfileContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserProfileProvider, \"RaHoXgiuIigh0mEWS5vYwcNAo5A=\");\n\n_c = UserProfileProvider;\n\nconst userProfileReducer = (state = initialUserProfile, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOGIN_STATUS':\n      {\n        return { ...initialUserProfile,\n          userStatus: \"Online\"\n        };\n      }\n\n    case 'USER_LOGIN':\n      {\n        return { ...initialUserProfile,\n          name: action.payload.name,\n          loggedInTime: action.payload.loggedInTime,\n          userStatus: action.payload.userStatus,\n          loginStatus: action.payload.loginStatus,\n          userID: action.payload.userID\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileProvider\");","map":{"version":3,"sources":["/Users/bharathmahendra/Bharath/React/Chat App/src/store/userContext.js"],"names":["React","useReducer","createContext","initialUserProfile","UserProfileContext","UserProfileProvider","props","state","dispatch","userProfileReducer","children","action","type","userStatus","name","payload","loggedInTime","loginStatus","userID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,IAAIC,kBAAkB,GAAG;AACrB,UAAQ,EADa;AAErB,kBAAgB,EAFK;AAGrB,gBAAc,EAHO;AAIrB,iBAAe,EAJM;AAKrB,YAAU;AALW,CAAzB;AAQAA,kBAAkB,GAAG;AAAE,UAAQ,SAAV;AAAqB,kBAAgB,0BAArC;AAAiE,gBAAc,QAA/E;AAAyF,iBAAe,WAAxG;AAAqH,YAAU;AAA/H,CAArB;AAEA,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAACC,kBAAD,CAAxC;AAGP,OAAO,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACQ,kBAAD,EAAqBN,kBAArB,CAApC;AAEA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,EAAE,GAAGI,KAAL;AAAYC,MAAAA;AAAZ,KAApC;AAAA,cACFF,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CANM;;GAAML,mB;;KAAAA,mB;;AAQb,MAAMI,kBAAkB,GAAG,CAACF,KAAK,GAAGJ,kBAAT,EAA6BQ,MAA7B,KAAwC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AAA4B;AACxB,eAAO,EAAE,GAAGT,kBAAL;AAAyBU,UAAAA,UAAU,EAAE;AAArC,SAAP;AACH;;AACD,SAAK,YAAL;AAAmB;AACf,eAAO,EACH,GAAGV,kBADA;AAEHW,UAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD,IAFlB;AAGHE,UAAAA,YAAY,EAAEL,MAAM,CAACI,OAAP,CAAeC,YAH1B;AAIHH,UAAAA,UAAU,EAAEF,MAAM,CAACI,OAAP,CAAeF,UAJxB;AAKHI,UAAAA,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE,WALzB;AAMHC,UAAAA,MAAM,EAAEP,MAAM,CAACI,OAAP,CAAeG;AANpB,SAAP;AAQH;;AACD;AAAS,aAAO,EAAE,GAAGX;AAAL,OAAP;AAdb;AAgBH,CAjBD","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nlet initialUserProfile = {\n    \"name\": \"\",\n    \"loggedInTime\": \"\",\n    \"userStatus\": \"\",\n    \"loginStatus\": \"\",\n    \"userID\": \"\"\n}\n\ninitialUserProfile = { \"name\": \"bharath\", \"loggedInTime\": \"2021-08-16T18:30:49.934Z\", \"userStatus\": \"Online\", \"loginStatus\": \"Logged in\", \"userID\": \"user1\" }\n\nexport const UserProfileContext = createContext(initialUserProfile);\n\n\nexport const UserProfileProvider = props => {\n    const [state, dispatch] = useReducer(userProfileReducer, initialUserProfile);\n\n    return <UserProfileContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </UserProfileContext.Provider>;\n}\n\nconst userProfileReducer = (state = initialUserProfile, action) => {\n    switch (action.type) {\n        case 'CHANGE_LOGIN_STATUS': {\n            return { ...initialUserProfile, userStatus: \"Online\" };\n        }\n        case 'USER_LOGIN': {\n            return {\n                ...initialUserProfile,\n                name: action.payload.name,\n                loggedInTime: action.payload.loggedInTime,\n                userStatus: action.payload.userStatus,\n                loginStatus: action.payload.loginStatus,\n                userID: action.payload.userID\n            }\n        }\n        default: return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}