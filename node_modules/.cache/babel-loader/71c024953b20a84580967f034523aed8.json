{"ast":null,"code":"var _jsxFileName = \"/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { UserProfileContext } from '../../store/userContext';\nimport { withRouter } from \"react-router\";\nimport { MessageContext, MessageProvider } from '../../store/messageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatList = props => {\n  _s();\n\n  const [messageText, setMessageText] = useState('');\n  var db = firebase.firestore();\n  const {\n    name: userName\n  } = useContext(UserProfileContext);\n  const messageContextProps = useContext(MessageContext);\n  const [messageList, setMessageList] = useState([]);\n  const [userList, setUserList] = useState([]); // console.log({messageContextProps})\n\n  useEffect(() => {\n    db.collection(\"text\").orderBy(\"time\", \"asc\").get().then(querySnapshot => {\n      const result = querySnapshot.docs.map(doc => doc.data());\n      setMessageList(result);\n    }).catch(err => console.log('Oops ', err));\n    db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n      const result = doc.docs.map(doc => doc.data());\n      setMessageList(result); // console.log('changed data ', doc.docs && doc.docs.map(el => el.data()))\n    });\n    db.collection('users').get().then(querySnapshot => {\n      const result = querySnapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      setUserList(result);\n      console.log('users list ', result);\n    }).catch(err => console.log('Oops ', err));\n  }, [db]);\n\n  const sendMessage = () => {\n    db.collection(\"text\").add({\n      from: userName,\n      to: 'Bob',\n      message: messageText,\n      time: new Date() //'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n    }).then(docRef => {\n      console.log(\"Document written with ID: \", docRef.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  const getChatRoom = userId => {\n    // dispatch({\n    //     type: 'SET_RECEIVER_DETAILS',\n    //     payload: {\n    //         name: userId,\n    //         userName: userId,\n    //         userID: userId\n    //     }\n    // })\n    // /users/user1/conversations/user2/messages\n    console.log({\n      messageContextProps\n    });\n    db.collection('/users/user1/conversations/user2/messages').get().then(querySnapshot => {\n      const result = querySnapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })); // setUserList(result);\n\n      console.log('messages list ', result);\n    }).catch(err => console.log('Oops ', err));\n  }; // console.log(userList)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"testads adas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to csshatroom \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"pick a contact u gotta talk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userList.map((el, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: e => getChatRoom(el.id),\n          children: el.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), userName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: [\"Send =\", '>']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatList, \"7AnvyLQm+Zx2blVZAhAvQCPnQRw=\");\n\n_c = ChatList;\nexport default _c2 = withRouter(ChatList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatList.js"],"names":["React","useContext","useEffect","useState","firebase","UserProfileContext","withRouter","MessageContext","MessageProvider","ChatList","props","messageText","setMessageText","db","firestore","name","userName","messageContextProps","messageList","setMessageList","userList","setUserList","collection","orderBy","get","then","querySnapshot","result","docs","map","doc","data","catch","err","console","log","onSnapshot","id","sendMessage","add","from","to","message","time","Date","docRef","error","getChatRoom","userId","el","i","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { UserProfileContext } from '../../store/userContext';\nimport { withRouter } from \"react-router\";\nimport { MessageContext, MessageProvider } from '../../store/messageContext';\n\nconst ChatList = props => {\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n    const { name: userName } = useContext(UserProfileContext);\n    const messageContextProps = useContext(MessageContext);\n    const [messageList, setMessageList] = useState([]);\n    const [userList, setUserList] = useState([]);\n// console.log({messageContextProps})\n    useEffect(() => {\n        db.collection(\"text\").orderBy(\"time\", \"asc\").get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => doc.data());\n            setMessageList(result);\n        }).catch(err => console.log('Oops ', err))\n\n        db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n            const result = doc.docs.map(doc => doc.data());\n            setMessageList(result);\n            // console.log('changed data ', doc.docs && doc.docs.map(el => el.data()))\n        })\n        db.collection('users').get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n            setUserList(result);\n            console.log('users list ', result)\n        }).catch(err => console.log('Oops ', err))\n    }, [db])\n\n    const sendMessage = () => {\n        db.collection(\"text\").add({\n            from: userName,\n            to: 'Bob',\n            message: messageText,\n            time: new Date()//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    const getChatRoom = (userId) => {\n        // dispatch({\n        //     type: 'SET_RECEIVER_DETAILS',\n        //     payload: {\n        //         name: userId,\n        //         userName: userId,\n        //         userID: userId\n        //     }\n        // })\n        // /users/user1/conversations/user2/messages\nconsole.log({messageContextProps})\n\n        db.collection('/users/user1/conversations/user2/messages').get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n            // setUserList(result);\n            console.log('messages list ', result)\n        }).catch(err => console.log('Oops ', err))\n    }\n\n    // console.log(userList)\n\n    return <div>\n        <p>testads adas</p>\n        <h1>Welcome to csshatroom {userName}</h1>\n        {/* <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.from === userName ? 'profile right' : 'profile left'}>\n                {el.from === userName ? `${el.message} <- ${userName}` : `${el.from} -> ${el.message}`}  { }\n            </p>)}\n        </div> */}\n        <div>\n            <h3><ul>pick a contact u gotta talk</ul></h3>\n            <div>{userList.map((el, i) => <p key={i} onClick={e => getChatRoom(el.id)}>{el.name}</p>)}</div>\n        </div>\n        {userName && <>\n            <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send ={'>'}</button>\n        </>}\n        {/* <input type='text' value={sender} onChange={e => setSender(e.target.value)} /> */}\n    </div>\n}\n\nexport default withRouter(ChatList);"]},"metadata":{},"sourceType":"module"}