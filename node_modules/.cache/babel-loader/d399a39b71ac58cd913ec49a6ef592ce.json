{"ast":null,"code":"var _jsxFileName = \"/Bharath/React/Chat App/src/store/themeContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer } from 'react';\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTheme = {\n  backgroundColor: \"black\",\n  color: \"white\"\n};\nexport const ThemeContext = /*#__PURE__*/createContext(initialTheme);\nexport const ThemeProvider = props => /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n  value: initialTheme,\n  children: props.children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 39\n}, this);\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialTheme); //  ;\n\n  return { ...state,\n    dispatch\n  };\n};\n\n_s(useTheme, \"zLZGi0ch7j1wz53qMLoLpplJxwE=\");\n\nconst themeReducer = (state = useContext(initialTheme), action) => {\n  _s2();\n\n  console.log('Inside theme reducer ', action);\n\n  switch (action.type) {\n    case 'CHANGE_THEME':\n      {\n        console.log('Inside change theme');\n        return {\n          backgroundColor: \"white\",\n          color: \"black\"\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_s2(themeReducer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Bharath/React/Chat App/src/store/themeContext.js"],"names":["React","useContext","useReducer","createContext","initialTheme","backgroundColor","color","ThemeContext","ThemeProvider","props","children","useTheme","state","dispatch","themeReducer","action","console","log","type"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,OADA;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAACC,YAAD,CAAlC;AAGP,OAAO,MAAMI,aAAa,GAAGC,KAAK,iBAAI,QAAC,YAAD,CAAc,QAAd;AAAuB,EAAA,KAAK,EAAEL,YAA9B;AAAA,YACjCK,KAAK,CAACC;AAD2B;AAAA;AAAA;AAAA;AAAA,QAA/B;KAAMF,a;AAIb,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACY,YAAD,EAAeV,YAAf,CAApC,CAD0B,CAE1B;;AACA,SAAO,EAAE,GAAGQ,KAAL;AAAYC,IAAAA;AAAZ,GAAP;AACH,CAJM;;GAAMF,Q;;AAOb,MAAMG,YAAY,GAAG,CAACF,KAAK,GAAGX,UAAU,CAACG,YAAD,CAAnB,EAAmCW,MAAnC,KAA8C;AAAA;;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,cAAL;AAAqB;AACjBF,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,eAAO;AACHZ,UAAAA,eAAe,EAAE,OADd;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH;;AACD;AAAS,aAAO,EAAE,GAAGM;AAAL,OAAP;AARb;AAUH,CAZD;;IAAME,Y","sourcesContent":["import React, { useContext, useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialTheme = {\n    backgroundColor: \"black\",\n    color: \"white\"\n}\n\nexport const ThemeContext = createContext(initialTheme);\n\n\nexport const ThemeProvider = props => <ThemeContext.Provider value={initialTheme}>\n    {props.children}\n</ThemeContext.Provider>\n\nexport const useTheme = () => {\n    const [state, dispatch] = useReducer(themeReducer, initialTheme)\n    //  ;\n    return { ...state, dispatch }\n}\n\n\nconst themeReducer = (state = useContext(initialTheme), action) => {\n    console.log('Inside theme reducer ', action)\n    switch (action.type) {\n        case 'CHANGE_THEME': {\n            console.log('Inside change theme')\n            return {\n                backgroundColor: \"white\",\n                color: \"black\"\n            }\n        }\n        default: return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}