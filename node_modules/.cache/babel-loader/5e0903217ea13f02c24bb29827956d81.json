{"ast":null,"code":"var _jsxFileName = \"/Bharath/React/Chat App/src/store/themeContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTheme = {\n  backgroundColor: \"black\",\n  color: \"white\"\n};\nexport const ThemeContext = /*#__PURE__*/createContext(initialTheme);\nexport const ThemeProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialTheme);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ThemeProvider, \"zLZGi0ch7j1wz53qMLoLpplJxwE=\");\n\n_c = ThemeProvider;\n\nconst themeReducer = (state = initialTheme, action) => {\n  switch (action.type) {\n    case 'CHANGE_THEME':\n      {\n        return {\n          backgroundColor: \"white\",\n          color: \"black\"\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Bharath/React/Chat App/src/store/themeContext.js"],"names":["React","useReducer","createContext","initialTheme","backgroundColor","color","ThemeContext","ThemeProvider","props","state","dispatch","themeReducer","children","action","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,OADA;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAACC,YAAD,CAAlC;AAGP,OAAO,MAAMI,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACU,YAAD,EAAeR,YAAf,CAApC;AAEA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,EAAE,GAAGM,KAAL;AAAYC,MAAAA;AAAZ,KAA9B;AAAA,cACFF,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CANM;;GAAML,a;;KAAAA,a;;AAQb,MAAMI,YAAY,GAAG,CAACF,KAAK,GAAGN,YAAT,EAAuBU,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AAAqB;AACjB,eAAO;AACHV,UAAAA,eAAe,EAAE,OADd;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH;;AACD;AAAS,aAAO,EAAE,GAAGI;AAAL,OAAP;AAPb;AASH,CAVD","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialTheme = {\n    backgroundColor: \"black\",\n    color: \"white\"\n}\n\nexport const ThemeContext = createContext(initialTheme);\n\n\nexport const ThemeProvider = props => {\n    const [state, dispatch] = useReducer(themeReducer, initialTheme);\n\n    return <ThemeContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </ThemeContext.Provider>\n}\n\nconst themeReducer = (state = initialTheme, action) => {\n    switch (action.type) {\n        case 'CHANGE_THEME': {\n            return {\n                backgroundColor: \"white\",\n                color: \"black\"\n            }\n        }\n        default: return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}