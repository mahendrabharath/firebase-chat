{"ast":null,"code":"import _slicedToArray from\"/System/Volumes/Data/Bharath/React/Chat App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{UserProfileContext}from'../../store/userContext';import firebase from\"firebase/app\";import TextInput from'../../UIControls/TextInput/TextInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useContext=useContext(UserProfileContext),loginStatus=_useContext.loginStatus,dispatch=_useContext.dispatch,name=_useContext.name;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userID=_useState2[0],setuserID=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var db=firebase.firestore();var login=function login(){db.collection('users').doc(userID).get().then(function(querySnapshot){var result=querySnapshot.data();// setUserList(result);\nconsole.log('messages list ',result);dispatch({type:'USER_LOGIN',payload:{name:result.name,loggedInTime:new Date(),userStatus:\"Online\",loginStatus:'Logged in',userID:userID}});}).catch(function(err){return console.log('Oops ',err);});};if(!loginStatus){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TextInput,{placeholder:\"Enter userID\",value:userID,onChange:function onChange(e){return setuserID(e.target.value);}}),/*#__PURE__*/_jsx(TextInput,{placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},onKeyPress:function onKeyPress(e){return e.key==='Enter'&&login(e.target.value);}})]})});}return/*#__PURE__*/_jsx(\"h3\",{children:name});};export default Login;","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/components/login/Login.js"],"names":["React","useContext","useState","UserProfileContext","firebase","TextInput","Login","loginStatus","dispatch","name","userID","setuserID","password","setPassword","db","firestore","login","collection","doc","get","then","querySnapshot","result","data","console","log","type","payload","loggedInTime","Date","userStatus","catch","err","e","target","value","key"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,kBAAT,KAAmC,yBAAnC,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sCAAtB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,iBACwBL,UAAU,CAACE,kBAAD,CADlC,CACRI,WADQ,aACRA,WADQ,CACKC,QADL,aACKA,QADL,CACeC,IADf,aACeA,IADf,eAEYP,QAAQ,CAAC,EAAD,CAFpB,wCAETQ,MAFS,eAEDC,SAFC,8BAGgBT,QAAQ,CAAC,EAAD,CAHxB,yCAGTU,QAHS,eAGCC,WAHD,eAIhB,GAAIC,CAAAA,EAAE,CAAGV,QAAQ,CAACW,SAAT,EAAT,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChBF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BR,MAA3B,EAAmCS,GAAnC,GAAyCC,IAAzC,CAA8C,SAACC,aAAD,CAAmB,CAC7D,GAAMC,CAAAA,MAAM,CAAGD,aAAa,CAACE,IAAd,EAAf,CACA;AACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BH,MAA9B,EACAd,QAAQ,CAAC,CACLkB,IAAI,CAAE,YADD,CACeC,OAAO,CAAE,CACzBlB,IAAI,CAAEa,MAAM,CAACb,IADY,CAEzBmB,YAAY,CAAE,GAAIC,CAAAA,IAAJ,EAFW,CAGzBC,UAAU,CAAE,QAHa,CAIzBvB,WAAW,CAAE,WAJY,CAKzBG,MAAM,CAANA,MALyB,CADxB,CAAD,CAAR,CASH,CAbD,EAaGqB,KAbH,CAaS,SAAAC,GAAG,QAAIR,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBO,GAArB,CAAJ,EAbZ,EAcH,CAfD,CAiBA,GAAI,CAACzB,WAAL,CAAkB,CACd,mBAAO,kCACH,oCACI,KAAC,SAAD,EAAW,WAAW,CAAC,cAAvB,CAAsC,KAAK,CAAEG,MAA7C,CAAqD,QAAQ,CAAE,kBAAAuB,CAAC,QAAItB,CAAAA,SAAS,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,EAAhE,EADJ,cAEI,KAAC,SAAD,EAAW,WAAW,CAAC,gBAAvB,CAAwC,KAAK,CAAEvB,QAA/C,CAAyD,QAAQ,CAAE,kBAAAqB,CAAC,QAAIpB,CAAAA,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAApE,CACI,UAAU,CAAE,oBAAAF,CAAC,QAAIA,CAAAA,CAAC,CAACG,GAAF,GAAU,OAAV,EAAqBpB,KAAK,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9B,EADjB,EAFJ,GADG,EAAP,CAQH,CAED,mBAAO,oBAAK1B,IAAL,EAAP,CACH,CAnCD,CAqCA,cAAeH,CAAAA,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport TextInput from '../../UIControls/TextInput/TextInput';\n\nconst Login = () => {\n    const { loginStatus, dispatch, name } = useContext(UserProfileContext);\n    const [userID, setuserID] = useState('')\n    const [password, setPassword] = useState('')\n    var db = firebase.firestore()\n\n    const login = () => {\n        db.collection('users').doc(userID).get().then((querySnapshot) => {\n            const result = querySnapshot.data();\n            // setUserList(result);\n            console.log('messages list ', result)\n            dispatch({\n                type: 'USER_LOGIN', payload: {\n                    name: result.name,\n                    loggedInTime: new Date(),\n                    userStatus: \"Online\",\n                    loginStatus: 'Logged in',\n                    userID\n                }\n            })\n        }).catch(err => console.log('Oops ', err))\n    }\n\n    if (!loginStatus) {\n        return <div>\n            <div>\n                <TextInput placeholder='Enter userID' value={userID} onChange={e => setuserID(e.target.value)} />\n                <TextInput placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}\n                    onKeyPress={e => e.key === 'Enter' && login(e.target.value)}\n                />\n            </div>\n        </div>\n    }\n\n    return <h3>{name}</h3>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}