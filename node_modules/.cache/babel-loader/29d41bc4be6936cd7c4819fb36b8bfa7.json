{"ast":null,"code":"var _jsxFileName = \"/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = () => {\n  _s();\n\n  const messageProps = useContext(UserProfileContext);\n  const {\n    name: userName\n  } = useContext(UserProfileContext);\n  const [messageList, setMessageList] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  var db = firebase.firestore();\n  useEffect(() => {\n    db.collection(\"text\").orderBy(\"time\", \"asc\").get().then(querySnapshot => {\n      const result = querySnapshot.docs.map(doc => doc.data());\n      setMessageList(result);\n    }).catch(err => console.log('Oops ', err));\n    db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n      const result = doc.docs.map(doc => doc.data());\n      setMessageList(result); // console.log('changed data ', doc.docs && doc.docs.map(el => el.data()))\n    });\n  }, [db]);\n\n  const sendMessage = () => {\n    db.collection(\"text\").add({\n      from: userName,\n      to: 'Bob',\n      message: messageText,\n      time: new Date() //'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n    }).then(docRef => {\n      console.log(\"Document written with ID: \", docRef.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  console.log('ChatBox dis', messageProps);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DM  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: !!messageList.length && messageList.map((el, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: el.from === userName ? 'profile right' : 'profile left',\n        children: [el.from === userName ? `${el.message} <- ${userName}` : `${el.from} -> ${el.message}`, \"  \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 65\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), userName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: [\"Send =\", '>']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatBox, \"/trR4pt8Fc88+6lB7C0i1eWe97M=\");\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatBox.js"],"names":["React","useContext","useEffect","useState","UserProfileContext","firebase","ChatBox","messageProps","name","userName","messageList","setMessageList","messageText","setMessageText","db","firestore","collection","orderBy","get","then","querySnapshot","result","docs","map","doc","data","catch","err","console","log","onSnapshot","sendMessage","add","from","to","message","time","Date","docRef","id","error","length","el","i","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\n\nconst ChatBox = () => {\n    const messageProps = useContext(UserProfileContext);\n    const { name: userName } = useContext(UserProfileContext);\n    const [messageList, setMessageList] = useState([]);\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n\n    useEffect(() => {\n        db.collection(\"text\").orderBy(\"time\", \"asc\").get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => doc.data());\n            setMessageList(result);\n        }).catch(err => console.log('Oops ', err))\n\n        db.collection('text').orderBy(\"time\", \"asc\").onSnapshot(doc => {\n            const result = doc.docs.map(doc => doc.data());\n            setMessageList(result);\n            // console.log('changed data ', doc.docs && doc.docs.map(el => el.data()))\n        })\n    }, [db]);\n\n\n    const sendMessage = () => {\n        db.collection(\"text\").add({\n            from: userName,\n            to: 'Bob',\n            message: messageText,\n            time: new Date()//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    console.log('ChatBox dis', messageProps)\n    return <div>\n        <h3>DM  </h3>\n         <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.from === userName ? 'profile right' : 'profile left'}>\n                {el.from === userName ? `${el.message} <- ${userName}` : `${el.from} -> ${el.message}`}  { }\n            </p>)}\n        </div>\n\n        {userName && <>\n            <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send ={'>'}</button>\n        </>}\n    </div>\n}\n\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}