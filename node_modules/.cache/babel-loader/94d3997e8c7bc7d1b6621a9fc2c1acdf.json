{"ast":null,"code":"var _jsxFileName = \"/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport { MessageContext } from '../../store/messageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatBox = () => {\n  _s();\n\n  const {\n    receiver: {\n      userID: receiverUserID,\n      userName: receiverName\n    },\n    messagesDocPath\n  } = useContext(MessageContext);\n  const {\n    name: userName,\n    userID\n  } = useContext(UserProfileContext);\n  const [messageList, setMessageList] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  var db = firebase.firestore();\n  useEffect(() => {\n    // console.log({userID, receiverUserID})\n    console.log(\"messagesDocPath \", messagesDocPath);\n\n    if (messagesDocPath) {\n      db.collection(messagesDocPath).get().then(querySnapshot => {\n        const result = querySnapshot.docs.map(doc => doc.data());\n        setMessageList(result);\n        console.log('Receiver messages ', result);\n      }).catch(err => console.log('Oops ', err));\n      db.collection(messagesDocPath).orderBy(\"time\", \"asc\").onSnapshot(doc => {\n        const result = doc.docs.map(doc => doc.data());\n        setMessageList(result);\n      });\n    }\n  }, [db, messagesDocPath]);\n\n  const sendMessage = () => {\n    db.collection(\"/users/\" + userID + \"/conversations/\" + receiverUserID + \"/messages\").add({\n      message: messageText,\n      time: new Date(),\n      //'July 19, 2021 at 12:00:00 AM UTC+5:30'\n      user: userID\n    }).then(docRef => {\n      console.log(\"Document written with ID: \", docRef.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    });\n  }; // console.log('ChatBox dis', messageProps)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DM  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: !!messageList.length && messageList.map((el, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: el.user === userID ? 'profile right' : 'profile left',\n        children: [el.user === userID ? `${el.message} <- ${userName}` : `${receiverName} -> ${el.message}`, \"  \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 65\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), userName && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: [\"Send =\", '>']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatBox, \"7S/Yq/ZzMsydPl40Gv5+0MSXrOE=\");\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatBox.js"],"names":["React","useContext","useEffect","useState","UserProfileContext","firebase","MessageContext","ChatBox","receiver","userID","receiverUserID","userName","receiverName","messagesDocPath","name","messageList","setMessageList","messageText","setMessageText","db","firestore","console","log","collection","get","then","querySnapshot","result","docs","map","doc","data","catch","err","orderBy","onSnapshot","sendMessage","add","message","time","Date","user","docRef","id","error","length","el","i","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport { MessageContext } from '../../store/messageContext';\n\nconst ChatBox = () => {\n    const { receiver: { userID: receiverUserID, userName: receiverName }, messagesDocPath } = useContext(MessageContext);\n    const { name: userName, userID } = useContext(UserProfileContext);\n    const [messageList, setMessageList] = useState([]);\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n\n    useEffect(() => {\n        // console.log({userID, receiverUserID})\n        console.log(\"messagesDocPath \", messagesDocPath)\n        if (messagesDocPath) {\n            db.collection(messagesDocPath).get().then((querySnapshot) => {\n                const result = querySnapshot.docs.map(doc => doc.data());\n                setMessageList(result);\n                console.log('Receiver messages ', result)\n            }).catch(err => console.log('Oops ', err))\n\n            db.collection(messagesDocPath).orderBy(\"time\", \"asc\").onSnapshot(doc => {\n                const result = doc.docs.map(doc => doc.data());\n                setMessageList(result);\n            })\n        }\n\n    }, [db, messagesDocPath]);\n\n\n    const sendMessage = () => {\n        db.collection(\"/users/\"+userID+\"/conversations/\"+receiverUserID+\"/messages\").add({\n            message: messageText,\n            time: new Date(),//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n            user: userID\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    // console.log('ChatBox dis', messageProps)\n    return <div>\n        <h3>DM  </h3>\n        <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.user === userID ? 'profile right' : 'profile left'}>\n                {el.user === userID ? `${el.message} <- ${userName}` : `${receiverName} -> ${el.message}`}  { }\n            </p>)}\n        </div>\n\n        {userName && <>\n            <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send ={'>'}</button>\n        </>}\n    </div>\n}\n\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}