{"ast":null,"code":"import _slicedToArray from\"/System/Volumes/Data/Bharath/React/Chat App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{UserProfileContext}from'../../store/userContext';import firebase from\"firebase/app\";import{MessageContext}from'../../store/messageContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ChatBox=function ChatBox(){var _useContext=useContext(MessageContext),_useContext$receiver=_useContext.receiver,receiverUserID=_useContext$receiver.userID,receiverName=_useContext$receiver.userName,messagesDocPath=_useContext.messagesDocPath;var _useContext2=useContext(UserProfileContext),userName=_useContext2.name,userID=_useContext2.userID;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messageList=_useState2[0],setMessageList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),messageText=_useState4[0],setMessageText=_useState4[1];var db=firebase.firestore();useEffect(function(){// console.log({userID, receiverUserID})\nconsole.log(\"messagesDocPath \",messagesDocPath);if(messagesDocPath){db.collection(messagesDocPath).get().then(function(querySnapshot){var result=querySnapshot.docs.map(function(doc){return doc.data();});setMessageList(result);console.log('Receiver messages ',result);}).catch(function(err){return console.log('Oops ',err);});db.collection(messagesDocPath).orderBy(\"time\",\"asc\").onSnapshot(function(doc){var result=doc.docs.map(function(doc){return doc.data();});setMessageList(result);// console.log('u')\n});}},[db,messagesDocPath]);var sendMessage=function sendMessage(){db.collection(messagesDocPath).add({message:messageText,time:new Date(),//'July 19, 2021 at 12:00:00 AM UTC+5:30'\nuser:userID}).then(function(docRef){console.log(\"Document written with ID: \",docRef.id);}).catch(function(error){console.error(\"Error adding document: \",error);});};// console.log('ChatBox dis', messageProps)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"DM  \"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-box\",children:!!messageList.length&&messageList.map(function(el,i){return/*#__PURE__*/_jsxs(\"p\",{className:el.user===userID?'profile right':'profile left',children:[el.user===userID?\"\".concat(el.message,\" <- \").concat(userName):\"\".concat(receiverName,\" -> \").concat(el.message),\"  \"]},i);})}),userName&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:messageText,onChange:function onChange(e){return setMessageText(e.target.value);},onKeyPress:function onKeyPress(e){return e.key==='Enter'&&sendMessage();}}),/*#__PURE__*/_jsxs(\"button\",{onClick:sendMessage,children:[\"Send =\",'>']})]})]});};export default ChatBox;","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/components/chat/chatBox.js"],"names":["React","useContext","useEffect","useState","UserProfileContext","firebase","MessageContext","ChatBox","receiver","receiverUserID","userID","receiverName","userName","messagesDocPath","name","messageList","setMessageList","messageText","setMessageText","db","firestore","console","log","collection","get","then","querySnapshot","result","docs","map","doc","data","catch","err","orderBy","onSnapshot","sendMessage","add","message","time","Date","user","docRef","id","error","length","el","i","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport { MessageContext } from '../../store/messageContext';\n\nconst ChatBox = () => {\n    const { receiver: { userID: receiverUserID, userName: receiverName }, messagesDocPath } = useContext(MessageContext);\n    const { name: userName, userID } = useContext(UserProfileContext);\n    const [messageList, setMessageList] = useState([]);\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n\n    useEffect(() => {\n        // console.log({userID, receiverUserID})\n        console.log(\"messagesDocPath \", messagesDocPath)\n        if (messagesDocPath) {\n            db.collection(messagesDocPath).get().then((querySnapshot) => {\n                const result = querySnapshot.docs.map(doc => doc.data());\n                setMessageList(result);\n                console.log('Receiver messages ', result)\n            }).catch(err => console.log('Oops ', err))\n\n            db.collection(messagesDocPath).orderBy(\"time\", \"asc\").onSnapshot(doc => {\n                const result = doc.docs.map(doc => doc.data());\n                setMessageList(result);\n                // console.log('u')\n            })\n        }\n\n    }, [db, messagesDocPath]);\n\n\n    const sendMessage = () => {\n        db.collection(messagesDocPath).add({\n            message: messageText,\n            time: new Date(),//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n            user: userID\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    // console.log('ChatBox dis', messageProps)\n    return <div>\n        <h3>DM  </h3>\n        <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.user === userID ? 'profile right' : 'profile left'}>\n                {el.user === userID ? `${el.message} <- ${userName}` : `${receiverName} -> ${el.message}`}  { }\n            </p>)}\n        </div>\n\n        {userName && <>\n            <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send ={'>'}</button>\n        </>}\n    </div>\n}\n\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}