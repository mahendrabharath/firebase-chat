{"ast":null,"code":"var _jsxFileName = \"/Users/bharathmahendra/Bharath/React/Chat App/src/store/messageContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMessages = {\n  messages: [],\n  receiver: {\n    name: '',\n    userName: '',\n    userID: ''\n  },\n  messagesDocPath: ''\n};\nexport const MessageContext = /*#__PURE__*/createContext(initialMessages);\nexport const MessageProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(messageReducer, initialMessages); // console.log('dispatch ',dispatch)\n\n  return /*#__PURE__*/_jsxDEV(MessageContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MessageProvider, \"d7PfoaqDA/tf2P+r6q2utxX/2vc=\");\n\n_c = MessageProvider;\n\nconst messageReducer = (state = initialMessages, action) => {\n  switch (action.type) {\n    case 'SET_RECEIVER_DETAILS':\n      {\n        return { ...state,\n          receiver: {\n            name: action.payload.name,\n            userName: action.payload.userName,\n            userID: action.payload.userID\n          }\n        };\n      }\n\n    case 'SET_MESSAGE_DOC_URL':\n      {\n        return { ...state,\n          messagesDocPath: action.payload.path\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageProvider\");","map":{"version":3,"sources":["/Users/bharathmahendra/Bharath/React/Chat App/src/store/messageContext.js"],"names":["createContext","useReducer","initialMessages","messages","receiver","name","userName","userID","messagesDocPath","MessageContext","MessageProvider","props","state","dispatch","messageReducer","children","action","type","payload","path"],"mappings":";;;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAFU;AAOpBC,EAAAA,eAAe,EAAE;AAPG,CAAxB;AAUA,OAAO,MAAMC,cAAc,gBAAGT,aAAa,CAACE,eAAD,CAApC;AAGP,OAAO,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACa,cAAD,EAAiBZ,eAAjB,CAApC,CADoC,CAEpC;;AACA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,EAAE,GAAGU,KAAL;AAAYC,MAAAA;AAAZ,KAAhC;AAAA,cACFF,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CANM;;GAAML,e;;KAAAA,e;;AAQb,MAAMI,cAAc,GAAG,CAACF,KAAK,GAAGV,eAAT,EAA0Bc,MAA1B,KAAqC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,sBAAL;AAA6B;AACzB,eAAO,EACH,GAAGL,KADA;AACOR,UAAAA,QAAQ,EAAE;AAChBC,YAAAA,IAAI,EAAEW,MAAM,CAACE,OAAP,CAAeb,IADL;AAEhBC,YAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ,QAFT;AAGhBC,YAAAA,MAAM,EAAES,MAAM,CAACE,OAAP,CAAeX;AAHP;AADjB,SAAP;AAOH;;AACD,SAAK,qBAAL;AAA4B;AACxB,eAAO,EACH,GAAGK,KADA;AACOJ,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,CAAeC;AADvC,SAAP;AAGH;;AACD;AAAS,aAAO,EAAE,GAAGP;AAAL,OAAP;AAfb;AAiBH,CAlBD","sourcesContent":["\nimport { createContext, useReducer } from \"react\";\n\nconst initialMessages = {\n    messages: [],\n    receiver: {\n        name: '',\n        userName: '',\n        userID: ''\n    },\n    messagesDocPath: ''\n}\n\nexport const MessageContext = createContext(initialMessages);\n\n\nexport const MessageProvider = props => {\n    const [state, dispatch] = useReducer(messageReducer, initialMessages);\n    // console.log('dispatch ',dispatch)\n    return <MessageContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </MessageContext.Provider>;\n};\n\nconst messageReducer = (state = initialMessages, action) => {\n    switch (action.type) {\n        case 'SET_RECEIVER_DETAILS': {\n            return {\n                ...state, receiver: {\n                    name: action.payload.name,\n                    userName: action.payload.userName,\n                    userID: action.payload.userID\n                }\n            }\n        }\n        case 'SET_MESSAGE_DOC_URL': {\n            return {\n                ...state, messagesDocPath: action.payload.path\n            }\n        }\n        default: return { ...state };\n    }\n};\n"]},"metadata":{},"sourceType":"module"}