{"ast":null,"code":"var _jsxFileName = \"/System/Volumes/Data/Bharath/React/Chat App/src/store/userContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUserProfile = {\n  name: \"\",\n  loggedInTime: \"\",\n  userStatus: \"Offline\",\n  loginStatus: ''\n};\nexport const UserProfileContext = /*#__PURE__*/createContext(initialUserProfile);\nexport const UserProfileProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(userProfileReducer, initialUserProfile);\n  return /*#__PURE__*/_jsxDEV(UserProfileContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserProfileProvider, \"RaHoXgiuIigh0mEWS5vYwcNAo5A=\");\n\n_c = UserProfileProvider;\n\nconst userProfileReducer = (state = initialUserProfile, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOGIN_STATUS':\n      {\n        return { ...initialUserProfile,\n          userStatus: \"Online\"\n        };\n      }\n\n    case 'USER_LOGIN':\n      {\n        return { ...initialUserProfile,\n          name: action.payload.name,\n          loggedInTime: action.payload.loggedInTime,\n          userStatus: action.payload.userStatus,\n          loginStatus: action.payload.loginStatus\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileProvider\");","map":{"version":3,"sources":["/System/Volumes/Data/Bharath/React/Chat App/src/store/userContext.js"],"names":["React","useReducer","createContext","initialUserProfile","name","loggedInTime","userStatus","loginStatus","UserProfileContext","UserProfileProvider","props","state","dispatch","userProfileReducer","children","action","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,YAAY,EAAE,EAFS;AAGvBC,EAAAA,UAAU,EAAE,SAHW;AAIvBC,EAAAA,WAAW,EAAE;AAJU,CAA3B;AAOA,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAACC,kBAAD,CAAxC;AAGP,OAAO,MAAMM,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACY,kBAAD,EAAqBV,kBAArB,CAApC;AAEA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,EAAE,GAAGQ,KAAL;AAAYC,MAAAA;AAAZ,KAApC;AAAA,cACFF,KAAK,CAACI;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CANM;;GAAML,mB;;KAAAA,mB;;AAQb,MAAMI,kBAAkB,GAAG,CAACF,KAAK,GAAGR,kBAAT,EAA6BY,MAA7B,KAAwC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AAA4B;AACxB,eAAO,EAAE,GAAGb,kBAAL;AAAyBG,UAAAA,UAAU,EAAE;AAArC,SAAP;AACH;;AACD,SAAK,YAAL;AAAmB;AACf,eAAO,EACH,GAAGH,kBADA;AAEHC,UAAAA,IAAI,EAAEW,MAAM,CAACE,OAAP,CAAeb,IAFlB;AAGHC,UAAAA,YAAY,EAAEU,MAAM,CAACE,OAAP,CAAeZ,YAH1B;AAIHC,UAAAA,UAAU,EAAES,MAAM,CAACE,OAAP,CAAeX,UAJxB;AAKHC,UAAAA,WAAW,EAAEQ,MAAM,CAACE,OAAP,CAAeV;AALzB,SAAP;AAOH;;AACD;AAAS,aAAO,EAAE,GAAGI;AAAL,OAAP;AAbb;AAeH,CAhBD","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialUserProfile = {\n    name: \"\",\n    loggedInTime: \"\",\n    userStatus: \"Offline\",\n    loginStatus: ''\n}\n\nexport const UserProfileContext = createContext(initialUserProfile);\n\n\nexport const UserProfileProvider = props => {\n    const [state, dispatch] = useReducer(userProfileReducer, initialUserProfile);\n\n    return <UserProfileContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </UserProfileContext.Provider>;\n}\n\nconst userProfileReducer = (state = initialUserProfile, action) => {\n    switch (action.type) {\n        case 'CHANGE_LOGIN_STATUS': {\n            return { ...initialUserProfile, userStatus: \"Online\" };\n        }\n        case 'USER_LOGIN': {\n            return {\n                ...initialUserProfile, \n                name: action.payload.name,\n                loggedInTime: action.payload.loggedInTime,\n                userStatus: action.payload.userStatus,\n                loginStatus: action.payload.loginStatus\n            }\n        }\n        default: return { ...state }\n    }\n}"]},"metadata":{},"sourceType":"module"}