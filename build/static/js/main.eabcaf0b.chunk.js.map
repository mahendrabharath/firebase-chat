{"version":3,"sources":["store/themeContext.js","components/home/index.js","store/messageContext.js","store/userContext.js","components/chat/chatBox.js","components/chat/chatList.js","components/chat/index.js","UIControls/TextInput/TextInput.js","components/login/Login.js","UIControls/Button/Button.js","components/newUser/newUser.js","components/login/RouteProtector.js","App.js","reportWebVitals.js","index.js"],"names":["initialTheme","backgroundColor","color","ThemeContext","createContext","ThemeProvider","props","useReducer","themeReducer","state","dispatch","Provider","value","children","action","type","withRouter","useContext","style","width","display","className","onClick","history","push","initialMessages","messages","receiver","name","userName","userID","messagesDocPath","MessageContext","MessageProvider","messageReducer","payload","path","initialUserProfile","loggedInTime","userStatus","loginStatus","UserProfileContext","UserProfileProvider","userProfileReducer","ChatBox","receiverName","useState","messageList","setMessageList","messageText","setMessageText","db","firebase","firestore","useEffect","console","log","collection","get","then","querySnapshot","result","docs","map","doc","data","catch","err","orderBy","onSnapshot","sendMessage","add","message","time","Date","user","docRef","id","error","length","el","i","onChange","e","target","onKeyPress","key","userList","setUserList","receiverMessageFields","exists","reference","url","docURL","set","ChatRoom","TextInput","autoComplete","htmlFor","placeholder","Login","setuserID","password","setPassword","Button","onClickCapture","event","circle","document","createElement","x","nativeEvent","layerX","y","layerY","classList","left","top","appendChild","materializeEffect","label","NewUser","setUserName","href","fontSize","RouteProtector","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","signInAnonymously","res","ReactDOM","render","StrictMode","getElementById"],"mappings":"+RAGMA,EAAe,CACjBC,gBAAiB,OACjBC,MAAO,SAGEC,EAAeC,wBAAcJ,GAG7BK,EAAgB,SAAAC,GAAU,IAAD,EACRC,qBAAWC,EAAcR,GADjB,mBAC3BS,EAD2B,KACpBC,EADoB,KAGlC,OAAO,cAACP,EAAaQ,SAAd,CAAuBC,MAAK,2BAAOH,GAAP,IAAcC,aAA1C,SACFJ,EAAMO,YAITL,EAAe,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcc,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAAK,eACD,MAA8B,UAA1BN,EAAMR,gBACH,CACHA,gBAAiB,QACjBC,MAAO,SAEJF,EAEX,QAAS,OAAO,eAAKS,K,OCGdO,eA3BO,SAACV,GAAW,IACtBL,EAAoBgB,qBAAWd,GAA/BF,gBAiBR,OAAO,sBAAKiB,MAAO,CAACC,MAAO,OAAQlB,kBAAiBmB,QAAS,QAAtD,UACH,qBAAKC,UAAU,oBAIf,wBAAQC,QAAS,kBAAMhB,EAAMiB,QAAQC,KAAK,cAA1C,yB,QCzBFC,EAAkB,CACpBC,SAAU,GACVC,SAAU,CACNC,KAAM,GACNC,SAAU,GACVC,OAAQ,IAEZC,gBAAiB,IAGRC,EAAiB5B,wBAAcqB,GAG/BQ,EAAkB,SAAA3B,GAAU,IAAD,EACVC,qBAAW2B,EAAgBT,GADjB,mBAC7BhB,EAD6B,KACtBC,EADsB,KAGpC,OAAO,cAACsB,EAAerB,SAAhB,CAAyBC,MAAK,2BAAOH,GAAP,IAAcC,aAA5C,SACFJ,EAAMO,YAITqB,EAAiB,WAAsC,IAArCzB,EAAoC,uDAA5BgB,EAAiBX,EAAW,uCACxD,OAAQA,EAAOC,MACX,IAAK,uBACD,OAAO,2BACAN,GADP,IACckB,SAAU,CAChBC,KAAMd,EAAOqB,QAAQP,KACrBC,SAAUf,EAAOqB,QAAQN,SACzBC,OAAQhB,EAAOqB,QAAQL,UAInC,IAAK,sBACD,OAAO,2BACArB,GADP,IACcsB,gBAAiBjB,EAAOqB,QAAQC,OAGlD,QAAS,OAAO,eAAK3B,KCrCvB4B,EAAqB,CACvBT,KAAM,GACNU,aAAc,GACdC,WAAY,UACZC,YAAa,GACbV,OAAQ,IAGCW,EAAqBrC,wBAAciC,GAGnCK,EAAsB,SAAApC,GAAU,IAAD,EACdC,qBAAWoC,EAAoBN,GADjB,mBACjC5B,EADiC,KAC1BC,EAD0B,KAGxC,OAAO,cAAC+B,EAAmB9B,SAApB,CAA6BC,MAAK,2BAAOH,GAAP,IAAcC,aAAhD,SACFJ,EAAMO,YAIT8B,EAAqB,WAAyC,IAAxClC,EAAuC,uDAA/B4B,EAAoBvB,EAAW,uCAC/D,OAAQA,EAAOC,MACX,IAAK,sBACD,OAAO,2BAAKsB,GAAZ,IAAgCE,WAAY,WAEhD,IAAK,aACD,OAAO,2BACAF,GADP,IAEIT,KAAMd,EAAOqB,QAAQP,KACrBU,aAAcxB,EAAOqB,QAAQG,aAC7BC,WAAYzB,EAAOqB,QAAQI,WAC3BC,YAAa1B,EAAOqB,QAAQK,YAC5BV,OAAQhB,EAAOqB,QAAQL,SAG/B,QAAS,OAAO,eAAKrB,K,QCyBdmC,EAzDC,WAAO,IAAD,EACwE3B,qBAAWe,GADnF,IACVL,SAA8CkB,GADpC,EACEf,OADF,EAC0BD,UAA0BE,EADpD,EACoDA,gBADpD,EAEiBd,qBAAWwB,GAAhCZ,EAFI,EAEVD,KAAgBE,EAFN,EAEMA,OAFN,EAGoBgB,mBAAS,IAH7B,mBAGXC,EAHW,KAGEC,EAHF,OAIoBF,mBAAS,IAJ7B,mBAIXG,EAJW,KAIEC,EAJF,KAKdC,EAAKC,IAASC,YAElBC,qBAAU,WAENC,QAAQC,IAAI,mBAAoBzB,GAC5BA,IACAoB,EAAGM,WAAW1B,GAAiB2B,MAAMC,MAAK,SAACC,GACvC,IAAMC,EAASD,EAAcE,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,UACjDjB,EAAea,GACfN,QAAQC,IAAI,qBAAsBK,MACnCK,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,QAASW,MAErChB,EAAGM,WAAW1B,GAAiBqC,QAAQ,OAAQ,OAAOC,YAAW,SAAAL,GAC7D,IAAMH,EAASG,EAAIF,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,UACvCjB,EAAea,SAKxB,CAACV,EAAIpB,IAGR,IAAMuC,EAAc,WAChBnB,EAAGM,WAAW1B,GAAiBwC,IAAI,CAC/BC,QAASvB,EACTwB,KAAM,IAAIC,KACVC,KAAM7C,IACP6B,MAAK,SAACiB,GACLrB,QAAQC,IAAI,6BAA8BoB,EAAOC,OAClDX,OAAM,SAACY,GACNvB,QAAQuB,MAAM,0BAA2BA,OAKjD,OAAO,gCACH,sCACA,qBAAKzD,UAAU,WAAf,WACO0B,EAAYgC,QAAUhC,EAAYgB,KAAI,SAACiB,EAAIC,GAAL,OAAW,oBAAW5D,UAAW2D,EAAGL,OAAS7C,EAAS,gBAAkB,eAA7D,UAC/CkD,EAAGL,OAAS7C,EAAZ,UAAwBkD,EAAGR,QAA3B,eAAyC3C,GAAzC,UAAyDgB,EAAzD,eAA4EmC,EAAGR,SADhC,OAAQS,QAK/DpD,GAAY,qCACT,uBAAOd,KAAK,OAAOH,MAAOqC,EAAaiC,SAAU,SAAAC,GAAC,OAAIjC,EAAeiC,EAAEC,OAAOxE,QAC1EyE,WAAY,SAAAF,GAAC,MAAc,UAAVA,EAAEG,KAAmBhB,OAE1C,yBAAQhD,QAASgD,EAAjB,mBAAqC,cCUlCtD,eA7DE,SAAAV,GACb,IAAI6C,EAAKC,IAASC,YACV3C,EAAaO,qBAAWe,GAAxBtB,SAFc,EAGaO,qBAAWwB,GAAhCZ,EAHQ,EAGdD,KAAgBE,EAHF,EAGEA,OAHF,EAIUgB,mBAAS,IAJnB,mBAIfyC,EAJe,KAILC,EAJK,KAMtBlC,qBAAU,WACNH,EAAGM,WAAW,SAASC,MAAMC,MAAK,SAACC,GAC/B,IAAMC,EAASD,EAAcE,KAAKC,KAAI,SAAAC,GAAG,kCAAUA,EAAIC,QAAd,IAAsBY,GAAIb,EAAIa,QACvEW,EAAY3B,MAEbK,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,QAASW,QACtC,CAAChB,IAwCJ,OAAO,gCACH,sDAAyBtB,KACzB,gCACI,6BAAI,+DACJ,8BAAM0D,EAASxB,KAAI,SAACiB,EAAIC,GAAL,OAAW,mBAAW3D,QAAS,SAAA6D,GAAC,OAzCtCxD,EAyCsDqD,EAxCvE7B,EAAGM,WAAW,SAASO,IAAIlC,GAAQ2B,WAAW,iBAAiBO,IAAIrC,EAASkD,IAAInB,MAAMC,MAAK,SAAAC,GACnF,IAAM6B,EAAwB7B,EAAcK,OAC5C,GAAIL,EAAc8B,QAAUD,EAAsBE,UAClDjF,EAAS,CACLK,KAAM,sBACNoB,QAAS,CACLC,KAAMqD,EAAsBG,WAGjC,CACH,IAAMC,EAAS,UAAY/D,EAAS,kBAAoBH,EAASkD,GAAK,YAEtE1B,EAAGM,WAAW,SAASO,IAAIrC,EAASkD,IAAIpB,WAAW,iBAAiBO,IAAIlC,GAAQgE,IAAI,CAChFH,WAAW,EACXC,IAAKC,IAETnF,EAAS,CACLK,KAAM,sBACNoB,QAAS,CACLC,KAAMyD,SAInB3B,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,OAAQW,WACpCzD,EAAS,CACLK,KAAM,uBACNoB,QAAS,CACLP,KAAMD,EAASC,KACfC,SAAUF,EAASC,KACnBE,OAAQH,EAASkD,MA9BT,IAAClD,GAyCiB,SAA2CqD,EAAGpD,MAAtCqD,iBC/CnCc,EAVE,WACb,OAAO,8BACH,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,UCFGC,G,MALG,SAAA1F,GAAK,OAAI,sBAAKe,UAAU,oBAAf,UACvB,iDAAWf,GAAX,IAAkB2F,aAAa,MAAMlF,KAAK,QAAQM,UAAU,iBAC5D,uBAAO6E,QAAQ,OAAO7E,UAAU,cAAhC,SAA+Cf,EAAM6F,mBCuC1CC,EAtCD,WAAO,IAAD,EACwBnF,qBAAWwB,GAA3CD,EADQ,EACRA,YAAa9B,EADL,EACKA,SAAUkB,EADf,EACeA,KADf,EAEYkB,mBAAS,IAFrB,mBAEThB,EAFS,KAEDuE,EAFC,OAGgBvD,mBAAS,IAHzB,mBAGTwD,EAHS,KAGCC,EAHD,KAIZpD,EAAKC,IAASC,YAmBlB,OAAKb,EAYE,6BAAKZ,IAXD,8BACH,gCACI,4CACA,cAAC,EAAD,CAAWuE,YAAY,eAAevF,MAAOkB,EAAQoD,SAAU,SAAAC,GAAC,OAAIkB,EAAUlB,EAAEC,OAAOxE,UACvF,cAAC,EAAD,CAAWuF,YAAY,iBAAiBvF,MAAO0F,EAAUpB,SAAU,SAAAC,GAAC,OAAIoB,EAAYpB,EAAEC,OAAOxE,QACzFyE,WAAY,SAAAF,GAAC,MAAc,UAAVA,EAAEG,MAAyBH,EAAEC,OAAOxE,WAtBjEuC,EAAGM,WAAW,SAASO,IAAIlC,GAAQ4B,MAAMC,MAAK,SAACC,GAC3C,IAAMC,EAASD,EAAcK,OAE7BV,QAAQC,IAAI,iBAAkBK,GAC9BnD,EAAS,CACLK,KAAM,aAAcoB,QAAS,CACzBP,KAAMiC,EAAOjC,KACbU,aAAc,IAAIoC,KAClBnC,WAAY,SACZC,YAAa,YACbV,eAGToC,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,QAASW,gBCR9BqC,G,MAdA,SAAAlG,GAWX,OAAO,+CAASA,GAAT,IAAgBmG,eAAgB,SAAAtB,GAAC,OAVxC,SAA2BuB,GACvB,IAAMC,EAASC,SAASC,cAAc,OAChCC,EAAIJ,EAAMK,YAAYC,OACtBC,EAAIP,EAAMK,YAAYG,OAC5BP,EAAOQ,UAAU5C,IAAI,UACrBoC,EAAOzF,MAAMkG,KAAb,UAAuBN,EAAvB,MACAH,EAAOzF,MAAMmG,IAAb,UAAsBJ,EAAtB,MACAP,EAAMtB,OAAOkC,YAAYX,GAGeY,CAAkBpC,IAAI9D,UAAU,cAArE,SAAoFf,EAAMkH,WCoBtFC,G,MA7BC,WAAO,IAAD,EACc3E,mBAAS,IADvB,mBACXjB,EADW,KACD6F,EADC,OAEc5E,mBAAS,IAFvB,mBAEXwD,EAFW,KAEDC,EAFC,KAkBlB,OAAO,gCACH,+CACA,cAAC,EAAD,CAAWxF,KAAK,OAAOoF,YAAY,OAAOvF,MAAOiB,EAAUqD,SAAU,SAAAC,GAAC,OAAIuC,EAAYvC,EAAEC,OAAOxE,UAC/F,cAAC,EAAD,CAAWG,KAAK,OAAOoF,YAAY,WAAWvF,MAAO0F,EAAUpB,SAAU,SAAAC,GAAC,OAAIoB,EAAYpB,EAAEC,OAAOxE,UACnG,qBAAKS,UAAU,yBAAf,SACI,cAAC,EAAD,CAAQmG,MAAM,SAASlG,QAnBf,WAEZiC,QAAQC,IAAI,SACHJ,IAASC,YACfI,WAAW,SAASc,IAAI,CACvB3C,KAAMC,EACNyE,aACD3C,MAAK,SAACiB,GACLrB,QAAQC,IAAI,6BAA8BoB,EAAOC,OAClDX,OAAM,SAACY,GACNvB,QAAQuB,MAAM,0BAA2BA,WAW7C,mBAAG6C,KAAK,IAAIzG,MAAO,CAAC0G,SAAU,OAAQxG,QAAS,UAA/C,uBCpBOyG,EAPQ,SAAAvH,GAEnB,GADyBW,qBAAWwB,GAA7Bb,KACO,OAAO,mCAAGtB,EAAMO,YCuCnBiH,MA7Bf,WACE,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1F,KAAK,YAAZ,SAEI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,eAAC,EAAD,eAAiB,cAAC,EAAD,SAEnB,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,eAAC,EAAD,eAAiB,cAAC,EAAD,oBCtBhB2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCkBd5E,IAASmF,cAZc,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMjB1F,IAAS2F,YACT3F,IAAS4F,OAAOC,oBAAoBtF,MAAK,SAACuF,GAAD,OAAS3F,QAAQC,IAAI,sBAAuB0F,MAGrFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BvB,M","file":"static/js/main.eabcaf0b.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialTheme = {\n    backgroundColor: \"#333\",\n    color: \"white\"\n}\n\nexport const ThemeContext = createContext(initialTheme);\n\n\nexport const ThemeProvider = props => {\n    const [state, dispatch] = useReducer(themeReducer, initialTheme);\n\n    return <ThemeContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </ThemeContext.Provider>;\n}\n\nconst themeReducer = (state = initialTheme, action) => {\n    switch (action.type) {\n        case 'CHANGE_THEME': {\n            if (state.backgroundColor === 'black')\n            return {\n                backgroundColor: \"white\",\n                color: \"black\"\n            }\n            return initialTheme;\n        }\n        default: return { ...state }\n    }\n}","import { useContext } from \"react\";\nimport { ThemeContext } from \"../../store/themeContext\";\n// import firebase from \"firebase/app\";\nimport { withRouter } from \"react-router\";\n\nconst HomeComponent = (props) => {\n    const { backgroundColor } = useContext(ThemeContext);\n\n    // const add = () => {\n    //     var db = firebase.firestore()\n    //     db.collection(\"text\").add({\n    //         first: \"Ada\",\n    //         last: \"Lovelace\",\n    //         born: 1815\n    //     })\n    //     .then((docRef) => {\n    //         console.log(\"Document written with ID: \", docRef.id);\n    //     })\n    //     .catch((error) => {\n    //         console.error(\"Error adding document: \", error);\n    //     });\n    // }\n\n    return <div style={{width: '100%', backgroundColor, display: 'flex' }}>\n        <div className='image-container'>\n            {/* <img className='welcome-image' alt='welcome' src='/assets/images/welcomeImage1.jpeg' /> */}\n        </div>\n        {/* <button onClick={() => dispatch({type: 'CHANGE_THEME'})}>Change</button> */}\n        <button onClick={() => props.history.push('/chatRoom')}>Start</button>\n    </div>\n}\n\nexport default withRouter(HomeComponent);","\nimport { createContext, useReducer } from \"react\";\n\nconst initialMessages = {\n    messages: [],\n    receiver: {\n        name: '',\n        userName: '',\n        userID: ''\n    },\n    messagesDocPath: ''\n}\n\nexport const MessageContext = createContext(initialMessages);\n\n\nexport const MessageProvider = props => {\n    const [state, dispatch] = useReducer(messageReducer, initialMessages);\n    // console.log('dispatch ',dispatch)\n    return <MessageContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </MessageContext.Provider>;\n};\n\nconst messageReducer = (state = initialMessages, action) => {\n    switch (action.type) {\n        case 'SET_RECEIVER_DETAILS': {\n            return {\n                ...state, receiver: {\n                    name: action.payload.name,\n                    userName: action.payload.userName,\n                    userID: action.payload.userID\n                }\n            }\n        }\n        case 'SET_MESSAGE_DOC_URL': {\n            return {\n                ...state, messagesDocPath: action.payload.path\n            }\n        }\n        default: return { ...state };\n    }\n};\n","import React, { useReducer } from 'react';\nimport { createContext } from \"react\";\n\nconst initialUserProfile = {\n    name: \"\",\n    loggedInTime: \"\",\n    userStatus: \"Offline\",\n    loginStatus: '',\n    userID: ''\n}\n\nexport const UserProfileContext = createContext(initialUserProfile);\n\n\nexport const UserProfileProvider = props => {\n    const [state, dispatch] = useReducer(userProfileReducer, initialUserProfile);\n\n    return <UserProfileContext.Provider value={{ ...state, dispatch }}>\n        {props.children}\n    </UserProfileContext.Provider>;\n}\n\nconst userProfileReducer = (state = initialUserProfile, action) => {\n    switch (action.type) {\n        case 'CHANGE_LOGIN_STATUS': {\n            return { ...initialUserProfile, userStatus: \"Online\" };\n        }\n        case 'USER_LOGIN': {\n            return {\n                ...initialUserProfile, \n                name: action.payload.name,\n                loggedInTime: action.payload.loggedInTime,\n                userStatus: action.payload.userStatus,\n                loginStatus: action.payload.loginStatus,\n                userID: action.payload.userID\n            }\n        }\n        default: return { ...state }\n    }\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport { MessageContext } from '../../store/messageContext';\n\nconst ChatBox = () => {\n    const { receiver: { userID: receiverUserID, userName: receiverName }, messagesDocPath } = useContext(MessageContext);\n    const { name: userName, userID } = useContext(UserProfileContext);\n    const [messageList, setMessageList] = useState([]);\n    const [messageText, setMessageText] = useState('');\n    var db = firebase.firestore()\n\n    useEffect(() => {\n        // console.log({userID, receiverUserID})\n        console.log(\"messagesDocPath \", messagesDocPath)\n        if (messagesDocPath) {\n            db.collection(messagesDocPath).get().then((querySnapshot) => {\n                const result = querySnapshot.docs.map(doc => doc.data());\n                setMessageList(result);\n                console.log('Receiver messages ', result)\n            }).catch(err => console.log('Oops ', err))\n\n            db.collection(messagesDocPath).orderBy(\"time\", \"asc\").onSnapshot(doc => {\n                const result = doc.docs.map(doc => doc.data());\n                setMessageList(result);\n                // console.log('u')\n            })\n        }\n\n    }, [db, messagesDocPath]);\n\n\n    const sendMessage = () => {\n        db.collection(messagesDocPath).add({\n            message: messageText,\n            time: new Date(),//'July 19, 2021 at 12:00:00 AM UTC+5:30'\n            user: userID\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    // console.log('ChatBox dis', messageProps)\n    return <div>\n        <h3>DM  </h3>\n        <div className=\"chat-box\">\n            {!!messageList.length && messageList.map((el, i) => <p key={i} className={el.user === userID ? 'profile right' : 'profile left'}>\n                {el.user === userID ? `${el.message} <- ${userName}` : `${receiverName} -> ${el.message}`}  { }\n            </p>)}\n        </div>\n\n        {userName && <>\n            <input type='text' value={messageText} onChange={e => setMessageText(e.target.value)}\n                onKeyPress={e => e.key === 'Enter' && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send ={'>'}</button>\n        </>}\n    </div>\n}\n\nexport default ChatBox;","import React, { useContext, useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport { withRouter } from \"react-router\";\nimport { UserProfileContext } from '../../store/userContext';\nimport { MessageContext } from '../../store/messageContext';\n\nconst ChatList = props => {\n    var db = firebase.firestore()\n    const { dispatch } = useContext(MessageContext);\n    const { name: userName, userID } = useContext(UserProfileContext);\n    const [userList, setUserList] = useState([]);\n\n    useEffect(() => {\n        db.collection('users').get().then((querySnapshot) => {\n            const result = querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n            setUserList(result);\n            // console.log('users list ', result)\n        }).catch(err => console.log('Oops ', err))\n    }, [db])\n\n\n    const setChatRoom = (receiver) => {\n        db.collection('users').doc(userID).collection('conversations').doc(receiver.id).get().then(querySnapshot => {\n                const receiverMessageFields = querySnapshot.data();\n                if (querySnapshot.exists && receiverMessageFields.reference) { // if reference exists use the existing reference\n                dispatch({\n                    type: 'SET_MESSAGE_DOC_URL',\n                    payload: {\n                        path: receiverMessageFields.url\n                    }\n                })\n            } else { // if reference doesnt exist, then create a new document for message with sender's and receiver's user ID\n                const docURL = \"/users/\" + userID + \"/conversations/\" + receiver.id + \"/messages\";\n                // adds reference collection to the receiver end.\n                db.collection('users').doc(receiver.id).collection('conversations').doc(userID).set({\n                    reference: true,\n                    url: docURL\n                })\n                dispatch({\n                    type: 'SET_MESSAGE_DOC_URL',\n                    payload: {\n                        path: docURL\n                    }\n                })\n            }\n        }).catch(err => console.log('err ', err))\n        dispatch({\n            type: 'SET_RECEIVER_DETAILS',\n            payload: {\n                name: receiver.name,\n                userName: receiver.name,\n                userID: receiver.id\n            }\n        })\n    }\n\n    // console.log(userList)\n\n    return <div>\n        <h1>Welcome to chatroom {userName}</h1>\n        <div>\n            <h3><ul>pick a contact u gotta talk</ul></h3>\n            <div>{userList.map((el, i) => <p key={i} onClick={e => setChatRoom(el)}>{el.name}</p>)}</div>\n        </div>\n    </div>\n}\n\nexport default withRouter(ChatList);","import React from 'react';\nimport { MessageProvider } from '../../store/messageContext';\nimport ChatBox from './chatBox';\nimport ChatList from './chatList';\n\nconst ChatRoom = () => {\n    return <div>\n        <MessageProvider>\n            <ChatList />\n            <ChatBox />\n        </MessageProvider>\n    </div>\n}\n\n\nexport default ChatRoom;","import React from 'react';\nimport './TextInput.css'\nconst TextInput = props => <div className=\"form__group field\">\n    <input {...props} autoComplete=\"off\" type=\"input\" className=\"form__field\" />\n    <label htmlFor=\"name\" className=\"form__label\">{props.placeholder}</label>\n</div>\n\nexport default TextInput;","import React, { useContext, useState } from 'react';\nimport { UserProfileContext } from '../../store/userContext';\nimport firebase from \"firebase/app\";\nimport TextInput from '../../UIControls/TextInput/TextInput';\n\nconst Login = () => {\n    const { loginStatus, dispatch, name } = useContext(UserProfileContext);\n    const [userID, setuserID] = useState('')\n    const [password, setPassword] = useState('')\n    var db = firebase.firestore()\n\n    const login = () => {\n        db.collection('users').doc(userID).get().then((querySnapshot) => {\n            const result = querySnapshot.data();\n            // setUserList(result);\n            console.log('messages list ', result)\n            dispatch({\n                type: 'USER_LOGIN', payload: {\n                    name: result.name,\n                    loggedInTime: new Date(),\n                    userStatus: \"Online\",\n                    loginStatus: 'Logged in',\n                    userID\n                }\n            })\n        }).catch(err => console.log('Oops ', err))\n    }\n\n    if (!loginStatus) {\n        return <div>\n            <div>\n                <h3>Lets login</h3>\n                <TextInput placeholder='Enter userID' value={userID} onChange={e => setuserID(e.target.value)} />\n                <TextInput placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}\n                    onKeyPress={e => e.key === 'Enter' && login(e.target.value)}\n                />\n            </div>\n        </div>\n    }\n\n    return <h3>{name}</h3>\n}\n\nexport default Login;","import React from 'react';\nimport './Button.css'\n\nconst Button = props => {\n    function materializeEffect(event) {\n        const circle = document.createElement('div')\n        const x = event.nativeEvent.layerX\n        const y = event.nativeEvent.layerY\n        circle.classList.add('circle')\n        circle.style.left = `${x}px`\n        circle.style.top = `${y}px`\n        event.target.appendChild(circle);\n    }\n\n    return <div {...props} onClickCapture={e => materializeEffect(e)} className=\"form_button\">{props.label}</div>\n}\n\nexport default Button;","import React, { useState } from 'react';\nimport firebase from \"firebase/app\";\nimport TextInput from '../../UIControls/TextInput/TextInput';\nimport Button from '../../UIControls/Button/Button';\nimport './newUser.css'\nconst NewUser = () => {\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const addUser = () => {\n        debugger\n        console.log('rest ')\n        var db = firebase.firestore();\n        db.collection('users').add({\n            name: userName,\n            password\n        }).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        }).catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    return <div>\n        <h1>Register user</h1>\n        <TextInput type='text' placeholder='Name' value={userName} onChange={e => setUserName(e.target.value)} />\n        <TextInput type='text' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} />\n        <div className='new-user__add__wrapper'>\n            <Button label='Add me' onClick={addUser} />\n        </div>\n        <a href='/' style={{fontSize: '22px', display: 'inline'}}>Back</a>\n    </div>\n}\n\nexport default NewUser;","import React, { useContext } from \"react\";\nimport { UserProfileContext } from \"../../store/userContext\";\n\nconst RouteProtector = props => {\n    const {name: userName} = useContext(UserProfileContext);\n    if (userName) return <>{props.children}</>;\n\n    // return <h1>User not logged in...</h1>\n}\n\nexport default RouteProtector","// import logo from './logo.sv  g';\nimport './App.css';\nimport HomeComponent from './components/home';\nimport { ThemeProvider } from './store/themeContext';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ChatRoom from './components/chat/';\nimport { UserProfileProvider } from './store/userContext';\nimport Login from './components/login/Login';\nimport NewUser from './components/newUser/newUser';\nimport RouteProtector from './components/login/RouteProtector';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <UserProfileProvider>\n        <Login />\n        <Router>\n          <Switch>\n            <Route path=\"/chatRoom\">\n              {/* <RouteProtector> */}\n                <ChatRoom />\n              {/* </RouteProtector> */}\n            </Route>\n            <Route path=\"/newUser\">\n              <NewUser />\n            </Route>\n            <Route path=\"/login\">\n              <RouteProtector> <Login /></RouteProtector>\n            </Route>\n            <Route path=\"/\">\n              <RouteProtector> <HomeComponent /></RouteProtector>\n            </Route>\n          </Switch>\n        </Router>\n      </UserProfileProvider>\n    </ThemeProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n// const firebase = require(\"firebase\");\n// Required for side-effects\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAn3dbtc6VJ7keVicMn1i5ez2s_Jt1qbbE\",\n  authDomain: \"friendlyeats-c47ae.firebaseapp.com\",\n  projectId: \"friendlyeats-c47ae\",\n  storageBucket: \"friendlyeats-c47ae.appspot.com\",\n  messagingSenderId: \"989542196587\",\n  appId: \"1:989542196587:web:63896b071fdfab8d66982e\",\n  measurementId: \"G-6LXZLGGTXT\"\n};\n// firebase\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nfirebase.auth().signInAnonymously().then((res) => console.log('Firebase signed in ', res))\n// var db = firebase.firestore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}